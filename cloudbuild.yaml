# Google Cloud Build configuration for DevDham Monitoring Service
# This file handles building and deploying Grafana to Cloud Run (PRODUCTION ONLY)

steps:
  # Validate Grafana configuration
  - name: 'gcr.io/cloud-builders/docker'
    args: ['run', '--rm', '-v', '/workspace:/workspace', 'alpine:latest', 'sh', '-c',
           'test -f /workspace/grafana/grafana.ini && test -f /workspace/grafana/Dockerfile && echo "âœ… Configuration validated"']
    id: 'validate-config'

  # Build the Grafana Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-t', '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA',
      './grafana'
    ]
    id: 'build-grafana'
    waitFor: ['validate-config']

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA']
    id: 'push-grafana'
    waitFor: ['build-grafana']

  # Deploy to Cloud Run (PRODUCTION ONLY)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', '$_SERVICE_NAME',
      '--image', '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA',
      '--region', '$_DEPLOY_REGION',
      '--platform', 'managed',
      '--service-account', 'grafana-cloud-run@$_AR_PROJECT_ID.iam.gserviceaccount.com',
      '--add-cloudsql-instances', '$_AR_PROJECT_ID:$_DEPLOY_REGION:grafana-db',
      '--memory', '1Gi',
      '--cpu', '1',
      '--min-instances', '0',
      '--max-instances', '5',
      '--port', '3000',
      '--allow-unauthenticated',
      '--set-env-vars', 'NODE_ENV=production',
      '--timeout', '300',
      '--concurrency', '80',
      '--execution-environment', 'gen2',
      '--cpu-throttling',
      '--labels', 'managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID',
      '--quiet'
    ]
    entrypoint: gcloud
    id: 'deploy-grafana'
    waitFor: ['push-grafana']

  # Verify Cloud SQL connectivity
  - name: 'gcr.io/cloud-builders/gcloud'
    args: ['sql', 'instances', 'describe', 'grafana-db', '--format=value(connectionName)']
    id: 'verify-cloudsql'
    waitFor: ['deploy-grafana']

  # Verify deployment health
  - name: 'gcr.io/cloud-builders/curl'
    args: [
      '-f', '-s', '--retry', '10', '--retry-delay', '15',
      'https://grafana-${_SERVICE_SUFFIX}.run.app/api/health'
    ]
    id: 'health-check'
    waitFor: ['update-traffic']

  # Additional Grafana-specific health checks
  - name: 'gcr.io/cloud-builders/curl'
    args: [
      '-s', '--retry', '3', '--retry-delay', '5',
      'https://grafana-${_SERVICE_SUFFIX}.run.app/login'
    ]
    id: 'grafana-login-check'
    waitFor: ['health-check']

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitutionOption: ALLOW_LOOSE

# Build timeout
timeout: '1200s'

# Substitutions - will be overridden by trigger configuration
substitutions:
  _AR_HOSTNAME: asia-south1-docker.pkg.dev
  _AR_PROJECT_ID: devdham-production-16
  _AR_REPOSITORY: cloud-run-source-deploy
  _DEPLOY_REGION: asia-south1
  _PLATFORM: managed
  _SERVICE_NAME: v1-grafana
  _TRIGGER_ID: ''

# Artifacts to store
artifacts:
  images:
    - '$_AR_HOSTNAME/$_AR_PROJECT_ID/$_AR_REPOSITORY/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

# Tags for organization
tags:
  - 'gcp-cloud-build-deploy-cloud-run'
  - 'gcp-cloud-build-deploy-cloud-run-managed'
  - 'v1-grafana'